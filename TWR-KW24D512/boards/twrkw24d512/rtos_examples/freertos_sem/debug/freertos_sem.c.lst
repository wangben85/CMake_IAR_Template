###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         03/Mar/2020  16:31:36
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Other_Code_Repo\CMake_IAR_Template\TWR-KW24D512\boards\twrkw24d512\rtos_examples\freertos_sem\freertos_sem.c
#    Command line =  
#        C:\Other_Code_Repo\CMake_IAR_Template\TWR-KW24D512\boards\twrkw24d512\rtos_examples\freertos_sem\freertos_sem.c
#        "-IC:\Program Files (x86)\IAR Systems\Embedded Workbench 8.1\arm\inc"
#        -I..\..\..\..\..\CMSIS\Include -I..\..\..\..\..\devices -I..\..\..
#        -I..\..\..\..\..\devices\MKW24D5\drivers
#        -I..\..\..\..\..\devices\MKW24D5\utilities
#        -I..\..\..\..\..\devices\MKW24D5 -I..\..\iar -I..\.. -I..\
#        -I..\..\..\..\..\rtos\freertos_9.0.0\Source\portable\IAR\ARM_CM3
#        -I..\..\..\..\..\rtos\freertos_9.0.0\Source\include
#        -DCPU_MKW24D512VHA5 -DIAR -DFSL_RTOS_FREE_RTOS -DPRINTF_FLOAT_ENABLE=0
#        -DSCANF_FLOAT_ENABLE=0 -DPRINTF_ADVANCED_ENABLE=0
#        -DSCANF_ADVANCED_ENABLE=0 -DTWR_KW24D512 -DTOWER --diag_suppress
#        Pa082,Pa050,Pe167,Pa182 --endian=little --cpu=Cortex-M4 --fpu=None
#        --no_path_in_file_macros --silent -lC . -e --dlib_config "C:/Program
#        Files (x86)/IAR Systems/Embedded Workbench
#        8.1/arm/inc/c/DLib_Config_Normal.h" -Om --debug --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --dependencies=ns CMakeFiles\freertos_sem.dir\freertos_sem.c.obj.d -o
#        CMakeFiles\freertos_sem.dir\freertos_sem.c.obj
#    Locale       =  C
#    List file    =  .\freertos_sem.c.lst
#    Object file  =  CMakeFiles\freertos_sem.dir\freertos_sem.c.obj
#
###############################################################################

C:\Other_Code_Repo\CMake_IAR_Template\TWR-KW24D512\boards\twrkw24d512\rtos_examples\freertos_sem\freertos_sem.c
      1          /*
      2           * Copyright (c) 2015, Freescale Semiconductor, Inc.
      3           * Copyright 2016-2017 NXP
      4           *
      5           * Redistribution and use in source and binary forms, with or without modification,
      6           * are permitted provided that the following conditions are met:
      7           *
      8           * o Redistributions of source code must retain the above copyright notice, this list
      9           *   of conditions and the following disclaimer.
     10           *
     11           * o Redistributions in binary form must reproduce the above copyright notice, this
     12           *   list of conditions and the following disclaimer in the documentation and/or
     13           *   other materials provided with the distribution.
     14           *
     15           * o Neither the name of the copyright holder nor the names of its
     16           *   contributors may be used to endorse or promote products derived from this
     17           *   software without specific prior written permission.
     18           *
     19           * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
     20           * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
     21           * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     22           * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
     23           * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
     24           * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
     25           * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
     26           * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
     27           * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
     28           * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     29           */
     30          
     31          /* FreeRTOS includes. */
     32          #include "FreeRTOS.h"
     33          #include "task.h"
     34          #include "queue.h"
     35          #include "timers.h"
     36          #include "semphr.h"
     37          
     38          /* Freescale includes. */
     39          #include "fsl_device_registers.h"
     40          #include "fsl_debug_console.h"
     41          #include "board.h"
     42          
     43          #include "fsl_common.h"
     44          #include "pin_mux.h"
     45          #include "clock_config.h"
     46          /*******************************************************************************
     47           * Definitions
     48           ******************************************************************************/
     49          
     50          #define TASK_PRIO (configMAX_PRIORITIES - 1)
     51          #define CONSUMER_LINE_SIZE 3

   \                                 In section .bss, align 4
     52          SemaphoreHandle_t xSemaphore_producer;
   \                     xSemaphore_producer:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     53          SemaphoreHandle_t xSemaphore_consumer;
   \                     xSemaphore_consumer:
   \        0x0                      DS8 4
     54          /*******************************************************************************
     55           * Prototypes
     56           ******************************************************************************/
     57          static void producer_task(void *pvParameters);
     58          static void consumer_task(void *pvParameters);
     59          
     60          /*******************************************************************************
     61           * Code
     62           ******************************************************************************/
     63          /*!
     64           * @brief Main function
     65           */

   \                                 In section .text, align 2, keep-with-next
     66          int main(void)
     67          {
   \                     main: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
     68              /* Init board hardware. */
     69              BOARD_InitPins();
   \        0x2   0x.... 0x....      BL       BOARD_InitPins
     70              BOARD_BootClockRUN();
   \        0x6   0x.... 0x....      BL       BOARD_BootClockRUN
     71              BOARD_InitDebugConsole();
   \        0xA   0x.... 0x....      BL       BOARD_InitDebugConsole
     72              xTaskCreate(producer_task, "PRODUCER_TASK", configMINIMAL_STACK_SIZE + 128, NULL, TASK_PRIO, NULL);
   \        0xE   0x2000             MOVS     R0,#+0
   \       0x10   0x9001             STR      R0,[SP, #+4]
   \       0x12   0x2004             MOVS     R0,#+4
   \       0x14   0x9000             STR      R0,[SP, #+0]
   \       0x16   0x2300             MOVS     R3,#+0
   \       0x18   0xF44F 0x72C0      MOV      R2,#+384
   \       0x1C   0x....             LDR.N    R1,??DataTable2
   \       0x1E   0x.... 0x....      ADR.W    R0,producer_task
   \       0x22   0x.... 0x....      BL       xTaskCreate
     73              /* Start scheduling. */
     74              vTaskStartScheduler();
   \       0x26   0x.... 0x....      BL       vTaskStartScheduler
     75              for (;;)
   \                     ??main_0: (+1)
   \       0x2A   0xE7FE             B.N      ??main_0
     76                  ;
     77          }
     78          
     79          /*!
     80           * @brief Task producer_task.
     81           */

   \                                 In section .text, align 4, keep-with-next
     82          static void producer_task(void *pvParameters)
     83          {
   \                     producer_task: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
     84              uint32_t i;
     85              
     86              PRINTF("Producer_task created.\r\n");
   \        0x2   0x....             LDR.N    R0,??DataTable2_1
   \        0x4   0x.... 0x....      BL       DbgConsole_Printf
     87              xSemaphore_producer = xSemaphoreCreateBinary();
   \        0x8   0x....             LDR.N    R4,??DataTable2_2
   \        0xA   0x2203             MOVS     R2,#+3
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x2001             MOVS     R0,#+1
   \       0x10   0x.... 0x....      BL       xQueueGenericCreate
   \       0x14   0x6020             STR      R0,[R4, #+0]
     88              if (xSemaphore_producer == NULL)
   \       0x16   0x2800             CMP      R0,#+0
   \       0x18   0xD105             BNE.N    ??producer_task_0
     89              {
     90                  PRINTF("xSemaphore_producer creation failed.\r\n");
   \       0x1A   0x....             LDR.N    R0,??DataTable2_3
   \       0x1C   0x.... 0x....      BL       DbgConsole_Printf
     91                  vTaskSuspend(NULL);
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0x.... 0x....      BL       vTaskSuspend
     92              }
     93          
     94              xSemaphore_consumer = xSemaphoreCreateBinary();
   \                     ??producer_task_0: (+1)
   \       0x26   0x....             LDR.N    R5,??DataTable2_4
   \       0x28   0x2203             MOVS     R2,#+3
   \       0x2A   0x2100             MOVS     R1,#+0
   \       0x2C   0x2001             MOVS     R0,#+1
   \       0x2E   0x.... 0x....      BL       xQueueGenericCreate
   \       0x32   0x6028             STR      R0,[R5, #+0]
     95              if (xSemaphore_consumer == NULL)
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xD105             BNE.N    ??producer_task_1
     96              {
     97                  PRINTF("xSemaphore_consumer creation failed.\r\n");
   \       0x38   0x....             LDR.N    R0,??DataTable2_5
   \       0x3A   0x.... 0x....      BL       DbgConsole_Printf
     98                  vTaskSuspend(NULL);
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0x.... 0x....      BL       vTaskSuspend
     99              }
    100          
    101              for (i = 0; i < CONSUMER_LINE_SIZE; i++)
   \                     ??producer_task_1: (+1)
   \       0x44   0x2600             MOVS     R6,#+0
   \       0x46   0xE010             B.N      ??producer_task_2
    102              {
    103                  xTaskCreate(consumer_task, "CONSUMER_TASK", configMINIMAL_STACK_SIZE, (void *)i, TASK_PRIO, NULL);
   \                     ??producer_task_3: (+1)
   \       0x48   0x2000             MOVS     R0,#+0
   \       0x4A   0x9001             STR      R0,[SP, #+4]
   \       0x4C   0x2004             MOVS     R0,#+4
   \       0x4E   0x9000             STR      R0,[SP, #+0]
   \       0x50   0x4633             MOV      R3,R6
   \       0x52   0xF44F 0x7280      MOV      R2,#+256
   \       0x56   0x....             LDR.N    R1,??DataTable2_6
   \       0x58   0x.... 0x....      ADR.W    R0,consumer_task
   \       0x5C   0x.... 0x....      BL       xTaskCreate
    104                  PRINTF("Consumer_task %d created.\r\n", i);
   \       0x60   0x4631             MOV      R1,R6
   \       0x62   0x....             LDR.N    R0,??DataTable2_7
   \       0x64   0x.... 0x....      BL       DbgConsole_Printf
    105              }
   \       0x68   0x1C76             ADDS     R6,R6,#+1
   \                     ??producer_task_2: (+1)
   \       0x6A   0x2E03             CMP      R6,#+3
   \       0x6C   0xD3EC             BCC.N    ??producer_task_3
    106          
    107              while (1)
    108              {
    109                  /* Producer is ready to provide item. */
    110                  xSemaphoreGive(xSemaphore_consumer);
   \                     ??producer_task_4: (+1)
   \       0x6E   0x2300             MOVS     R3,#+0
   \       0x70   0x461A             MOV      R2,R3
   \       0x72   0x4611             MOV      R1,R2
   \       0x74   0x6828             LDR      R0,[R5, #+0]
   \       0x76   0x.... 0x....      BL       xQueueGenericSend
    111                  /* Producer is waiting when consumer will be ready to accept item. */
    112                  if (xSemaphoreTake(xSemaphore_producer, portMAX_DELAY) == pdTRUE)
   \       0x7A   0x2300             MOVS     R3,#+0
   \       0x7C   0xF04F 0x32FF      MOV      R2,#-1
   \       0x80   0x4619             MOV      R1,R3
   \       0x82   0x6820             LDR      R0,[R4, #+0]
   \       0x84   0x.... 0x....      BL       xQueueGenericReceive
   \       0x88   0x2801             CMP      R0,#+1
   \       0x8A   0xD103             BNE.N    ??producer_task_5
    113                  {
    114                      PRINTF("Producer released item.\r\n");
   \       0x8C   0x....             LDR.N    R0,??DataTable2_8
   \       0x8E   0x.... 0x....      BL       DbgConsole_Printf
   \       0x92   0xE7EC             B.N      ??producer_task_4
    115                  }
    116                  else
    117                  {
    118                      PRINTF("Producer is waiting for customer.\r\n");
   \                     ??producer_task_5: (+1)
   \       0x94   0x....             LDR.N    R0,??DataTable2_9
   \       0x96   0x.... 0x....      BL       DbgConsole_Printf
   \       0x9A   0xE7E8             B.N      ??producer_task_4
    119                  }
    120              }
    121          }
    122          
    123          /*!
    124           * @brief Task consumer_task.
    125           */

   \                                 In section .text, align 4, keep-with-next
    126          static void consumer_task(void *pvParameters)
    127          {
   \                     consumer_task: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x4604             MOV      R4,R0
    128              PRINTF("Consumer number: %d\r\n", pvParameters);
   \        0x4   0x4621             MOV      R1,R4
   \        0x6   0x....             LDR.N    R0,??DataTable2_10
   \        0x8   0x.... 0x....      BL       DbgConsole_Printf
   \        0xC   0xE002             B.N      ??consumer_task_0
    129              while (1)
    130              {
    131                  /* Consumer is ready to accept. */
    132                  xSemaphoreGive(xSemaphore_producer);
    133                  /* Consumer is waiting when producer will be ready to produce item. */
    134                  if (xSemaphoreTake(xSemaphore_consumer, portMAX_DELAY) == pdTRUE)
    135                  {
    136                      PRINTF("Consumer %d accepted item.\r\n", pvParameters);
   \                     ??consumer_task_1: (+1)
   \        0xE   0x....             LDR.N    R0,??DataTable2_11
   \       0x10   0x.... 0x....      BL       DbgConsole_Printf
    137                  }
   \                     ??consumer_task_0: (+1)
   \       0x14   0x2300             MOVS     R3,#+0
   \       0x16   0x461A             MOV      R2,R3
   \       0x18   0x4611             MOV      R1,R2
   \       0x1A   0x....             LDR.N    R0,??DataTable2_2
   \       0x1C   0x6800             LDR      R0,[R0, #+0]
   \       0x1E   0x.... 0x....      BL       xQueueGenericSend
   \       0x22   0x2300             MOVS     R3,#+0
   \       0x24   0xF04F 0x32FF      MOV      R2,#-1
   \       0x28   0x4619             MOV      R1,R3
   \       0x2A   0x....             LDR.N    R0,??DataTable2_4
   \       0x2C   0x6800             LDR      R0,[R0, #+0]
   \       0x2E   0x.... 0x....      BL       xQueueGenericReceive
   \       0x32   0x2801             CMP      R0,#+1
   \       0x34   0x4621             MOV      R1,R4
   \       0x36   0xD0EA             BEQ.N    ??consumer_task_1
    138                  else
    139                  {
    140                      PRINTF("Consumer %d is waiting for producer.\r\n", pvParameters);
   \       0x38   0x....             LDR.N    R0,??DataTable2_12
   \       0x3A   0x.... 0x....      BL       DbgConsole_Printf
   \       0x3E   0xE7E9             B.N      ??consumer_task_0
    141                  }
    142              }
    143          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \        0x0   0x....'....        DC32     xSemaphore_producer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \        0x0   0x....'....        DC32     xSemaphore_consumer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x50 0x52          DC8 "PRODUCER_TASK"
   \              0x4F 0x44    
   \              0x55 0x43    
   \              0x45 0x52    
   \              0x5F 0x54    
   \              0x41 0x53    
   \              0x4B 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x50 0x72          DC8 "Producer_task created.\015\012"
   \              0x6F 0x64    
   \              0x75 0x63    
   \              0x65 0x72    
   \              0x5F 0x74    
   \              0x61 0x73    
   \              0x6B 0x20    
   \              0x63 0x72    
   \              0x65 0x61    
   \              0x74 0x65    
   \              0x64 0x2E    
   \              0x0D 0x0A    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x78 0x53          DC8 "xSemaphore_producer creation failed.\015\012"
   \              0x65 0x6D    
   \              0x61 0x70    
   \              0x68 0x6F    
   \              0x72 0x65    
   \              0x5F 0x70    
   \              0x72 0x6F    
   \              0x64 0x75    
   \              0x63 0x65    
   \              0x72 0x20    
   \              0x63 0x72    
   \              0x65 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x2E    
   \              0x0D 0x0A    
   \              0x00         
   \       0x27   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x78 0x53          DC8 "xSemaphore_consumer creation failed.\015\012"
   \              0x65 0x6D    
   \              0x61 0x70    
   \              0x68 0x6F    
   \              0x72 0x65    
   \              0x5F 0x63    
   \              0x6F 0x6E    
   \              0x73 0x75    
   \              0x6D 0x65    
   \              0x72 0x20    
   \              0x63 0x72    
   \              0x65 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x2E    
   \              0x0D 0x0A    
   \              0x00         
   \       0x27   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x43 0x4F          DC8 "CONSUMER_TASK"
   \              0x4E 0x53    
   \              0x55 0x4D    
   \              0x45 0x52    
   \              0x5F 0x54    
   \              0x41 0x53    
   \              0x4B 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x43 0x6F          DC8 "Consumer_task %d created.\015\012"
   \              0x6E 0x73    
   \              0x75 0x6D    
   \              0x65 0x72    
   \              0x5F 0x74    
   \              0x61 0x73    
   \              0x6B 0x20    
   \              0x25 0x64    
   \              0x20 0x63    
   \              0x72 0x65    
   \              0x61 0x74    
   \              0x65 0x64    
   \              0x2E 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x50 0x72          DC8 "Producer released item.\015\012"
   \              0x6F 0x64    
   \              0x75 0x63    
   \              0x65 0x72    
   \              0x20 0x72    
   \              0x65 0x6C    
   \              0x65 0x61    
   \              0x73 0x65    
   \              0x64 0x20    
   \              0x69 0x74    
   \              0x65 0x6D    
   \              0x2E 0x0D    
   \              0x0A 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x50 0x72          DC8 "Producer is waiting for customer.\015\012"
   \              0x6F 0x64    
   \              0x75 0x63    
   \              0x65 0x72    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x77 0x61    
   \              0x69 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x63 0x75    
   \              0x73 0x74    
   \              0x6F 0x6D    
   \              0x65 0x72    
   \              0x2E 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x43 0x6F          DC8 "Consumer number: %d\015\012"
   \              0x6E 0x73    
   \              0x75 0x6D    
   \              0x65 0x72    
   \              0x20 0x6E    
   \              0x75 0x6D    
   \              0x62 0x65    
   \              0x72 0x3A    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x43 0x6F          DC8 "Consumer %d accepted item.\015\012"
   \              0x6E 0x73    
   \              0x75 0x6D    
   \              0x65 0x72    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x61 0x63    
   \              0x63 0x65    
   \              0x70 0x74    
   \              0x65 0x64    
   \              0x20 0x69    
   \              0x74 0x65    
   \              0x6D 0x2E    
   \              0x0D 0x0A    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x43 0x6F          DC8 "Consumer %d is waiting for producer.\015\012"
   \              0x6E 0x73    
   \              0x75 0x6D    
   \              0x65 0x72    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x69 0x73    
   \              0x20 0x77    
   \              0x61 0x69    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x70    
   \              0x72 0x6F    
   \              0x64 0x75    
   \              0x63 0x65    
   \              0x72 0x2E    
   \              0x0D 0x0A    
   \              0x00         
   \       0x27   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   consumer_task
         8   -> DbgConsole_Printf
         8   -> xQueueGenericReceive
         8   -> xQueueGenericSend
      16   main
        16   -> BOARD_BootClockRUN
        16   -> BOARD_InitDebugConsole
        16   -> BOARD_InitPins
        16   -> vTaskStartScheduler
        16   -> xTaskCreate
      24   producer_task
        24   -> DbgConsole_Printf
        24   -> vTaskSuspend
        24   -> xQueueGenericCreate
        24   -> xQueueGenericReceive
        24   -> xQueueGenericSend
        24   -> xTaskCreate


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
      16  ?_0
      28  ?_1
      40  ?_10
      40  ?_2
      40  ?_3
      16  ?_4
      28  ?_5
      28  ?_6
      36  ?_7
      24  ?_8
      32  ?_9
      64  consumer_task
      44  main
     156  producer_task
       4  xSemaphore_consumer
       4  xSemaphore_producer

 
   8 bytes in section .bss
 328 bytes in section .rodata
 316 bytes in section .text
 
 316 bytes of CODE  memory
 328 bytes of CONST memory
   8 bytes of DATA  memory

Errors: none
Warnings: none
