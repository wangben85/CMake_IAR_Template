###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         03/Mar/2020  16:31:36
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Other_Code_Repo\CMake_IAR_Template\TWR-KW24D512\boards\twrkw24d512\rtos_examples\freertos_sem\pin_mux.c
#    Command line =  
#        C:\Other_Code_Repo\CMake_IAR_Template\TWR-KW24D512\boards\twrkw24d512\rtos_examples\freertos_sem\pin_mux.c
#        "-IC:\Program Files (x86)\IAR Systems\Embedded Workbench 8.1\arm\inc"
#        -I..\..\..\..\..\CMSIS\Include -I..\..\..\..\..\devices -I..\..\..
#        -I..\..\..\..\..\devices\MKW24D5\drivers
#        -I..\..\..\..\..\devices\MKW24D5\utilities
#        -I..\..\..\..\..\devices\MKW24D5 -I..\..\iar -I..\.. -I..\
#        -I..\..\..\..\..\rtos\freertos_9.0.0\Source\portable\IAR\ARM_CM3
#        -I..\..\..\..\..\rtos\freertos_9.0.0\Source\include
#        -DCPU_MKW24D512VHA5 -DIAR -DFSL_RTOS_FREE_RTOS -DPRINTF_FLOAT_ENABLE=0
#        -DSCANF_FLOAT_ENABLE=0 -DPRINTF_ADVANCED_ENABLE=0
#        -DSCANF_ADVANCED_ENABLE=0 -DTWR_KW24D512 -DTOWER --diag_suppress
#        Pa082,Pa050,Pe167,Pa182 --endian=little --cpu=Cortex-M4 --fpu=None
#        --no_path_in_file_macros --silent -lC . -e --dlib_config "C:/Program
#        Files (x86)/IAR Systems/Embedded Workbench
#        8.1/arm/inc/c/DLib_Config_Normal.h" -Om --debug --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --dependencies=ns CMakeFiles\freertos_sem.dir\pin_mux.c.obj.d -o
#        CMakeFiles\freertos_sem.dir\pin_mux.c.obj
#    Locale       =  C
#    List file    =  .\pin_mux.c.lst
#    Object file  =  CMakeFiles\freertos_sem.dir\pin_mux.c.obj
#
###############################################################################

C:\Other_Code_Repo\CMake_IAR_Template\TWR-KW24D512\boards\twrkw24d512\rtos_examples\freertos_sem\pin_mux.c
      1          /*
      2           * Copyright (c) 2016, Freescale Semiconductor, Inc.
      3           * Copyright 2016-2017 NXP
      4           *
      5           * Redistribution and use in source and binary forms, with or without modification,
      6           * are permitted provided that the following conditions are met:
      7           *
      8           * o Redistributions of source code must retain the above copyright notice, this list
      9           *   of conditions and the following disclaimer.
     10           *
     11           * o Redistributions in binary form must reproduce the above copyright notice, this
     12           *   list of conditions and the following disclaimer in the documentation and/or
     13           *   other materials provided with the distribution.
     14           *
     15           * o Neither the name of the copyright holder nor the names of its
     16           *   contributors may be used to endorse or promote products derived from this
     17           *   software without specific prior written permission.
     18           *
     19           * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
     20           * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
     21           * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     22           * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
     23           * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
     24           * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
     25           * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
     26           * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
     27           * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
     28           * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     29           */
     30          
     31          /*
     32           * TEXT BELOW IS USED AS SETTING FOR THE PINS TOOL *****************************
     33          PinsProfile:
     34          - !!product 'Pins v2.0'
     35          - !!processor 'MKW24D512xxx5'
     36          - !!package 'MKW24D512VHA5'
     37          - !!mcu_data 'ksdk2_0'
     38          - !!processor_version '1.1.0'
     39           * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR THE PINS TOOL ***
     40           */
     41          
     42          #include "fsl_common.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void CLOCK_EnableClock(clock_ip_name_t)
   \                     CLOCK_EnableClock: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable1  ;; 0x40047000
   \        0x2   0xEB01 0x4110      ADD      R1,R1,R0, LSR #+16
   \        0x6   0x680A             LDR      R2,[R1, #+0]
   \        0x8   0x2301             MOVS     R3,#+1
   \        0xA   0xFA03 0xF000      LSL      R0,R3,R0
   \        0xE   0x4310             ORRS     R0,R0,R2
   \       0x10   0x6008             STR      R0,[R1, #+0]
   \       0x12   0x4770             BX       LR               ;; return
     43          #include "fsl_port.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void PORT_SetPinMux(PORT_Type *, uint32_t, port_mux_t)
   \                     PORT_SetPinMux: (+1)
   \        0x0   0xF850 0x3021      LDR      R3,[R0, R1, LSL #+2]
   \        0x4   0xF423 0x63E0      BIC      R3,R3,#0x700
   \        0x8   0x0212             LSLS     R2,R2,#+8
   \        0xA   0xF402 0x62E0      AND      R2,R2,#0x700
   \        0xE   0x431A             ORRS     R2,R2,R3
   \       0x10   0xF840 0x2021      STR      R2,[R0, R1, LSL #+2]
   \       0x14   0x4770             BX       LR               ;; return
     44          #include "pin_mux.h"
     45          
     46          #define PIN0_IDX                         0u   /*!< Pin number for pin 0 in a port */
     47          #define PIN1_IDX                         1u   /*!< Pin number for pin 1 in a port */
     48          #define SOPT5_UART1RXSRC_UART_RX      0x00u   /*!< UART 1 receive data source select: UART1_RX pin */
     49          #define SOPT5_UART1TXSRC_UART_TX      0x00u   /*!< UART 1 transmit data source select: UART1_TX pin */
     50          
     51          /*
     52           * TEXT BELOW IS USED AS SETTING FOR THE PINS TOOL *****************************
     53          BOARD_InitPins:
     54          - options: {coreID: singlecore, enableClock: 'true'}
     55          - pin_list:
     56            - {pin_num: '15', peripheral: UART1, signal: TX, pin_signal: ADC0_SE10/PTE0/SPI1_PCS1/UART1_TX/TRACE_CLKOUT/I2C1_SDA/RTC_CLKOUT}
     57            - {pin_num: '16', peripheral: UART1, signal: RX, pin_signal: ADC0_SE11/PTE1/LLWU_P0/SPI1_SOUT/UART1_RX/TRACE_D3/I2C1_SCL/SPI1_SIN}
     58           * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR THE PINS TOOL ***
     59           */
     60          
     61          /*FUNCTION**********************************************************************
     62           *
     63           * Function Name : BOARD_InitPins
     64           * Description   : Configures pin routing and optionally pin electrical features.
     65           *
     66           *END**************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     67          void BOARD_InitPins(void) {
   \                     BOARD_InitPins: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     68            CLOCK_EnableClock(kCLOCK_PortE);                           /* Port E Clock Gate Control: Clock enabled */
   \        0x2   0x....             LDR.N    R0,??DataTable1_1  ;; 0x1038000d
   \        0x4   0x.... 0x....      BL       CLOCK_EnableClock
     69          
     70            PORT_SetPinMux(PORTE, PIN0_IDX, kPORT_MuxAlt3);            /* PORTE0 (pin 15) is configured as UART1_TX */
   \        0x8   0x....             LDR.N    R4,??DataTable1_2  ;; 0x4004d000
   \        0xA   0x2203             MOVS     R2,#+3
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x4620             MOV      R0,R4
   \       0x10   0x.... 0x....      BL       PORT_SetPinMux
     71            PORT_SetPinMux(PORTE, PIN1_IDX, kPORT_MuxAlt3);            /* PORTE1 (pin 16) is configured as UART1_RX */
   \       0x14   0x2203             MOVS     R2,#+3
   \       0x16   0x2101             MOVS     R1,#+1
   \       0x18   0x4620             MOV      R0,R4
   \       0x1A   0x.... 0x....      BL       PORT_SetPinMux
     72            SIM->SOPT5 = ((SIM->SOPT5 &
     73              (~(SIM_SOPT5_UART1TXSRC_MASK | SIM_SOPT5_UART1RXSRC_MASK))) /* Mask bits to zero which are setting */
     74                | SIM_SOPT5_UART1TXSRC(SOPT5_UART1TXSRC_UART_TX)       /* UART 1 transmit data source select: UART1_TX pin */
     75                | SIM_SOPT5_UART1RXSRC(SOPT5_UART1RXSRC_UART_RX)       /* UART 1 receive data source select: UART1_RX pin */
     76              );
   \       0x1E   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40048010
   \       0x20   0x6801             LDR      R1,[R0, #+0]
   \       0x22   0xF021 0x01F0      BIC      R1,R1,#0xF0
   \       0x26   0x6001             STR      R1,[R0, #+0]
     77          }
   \       0x28   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x4004'7000        DC32     0x40047000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \        0x0   0x1038'000D        DC32     0x1038000d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \        0x0   0x4004'D000        DC32     0x4004d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \        0x0   0x4004'8010        DC32     0x40048010
     78          
     79          /*******************************************************************************
     80           * EOF
     81           ******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   BOARD_InitPins
         8   -> CLOCK_EnableClock
         8   -> PORT_SetPinMux
       0   CLOCK_EnableClock
       0   PORT_SetPinMux


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
      42  BOARD_InitPins
      20  CLOCK_EnableClock
      22  PORT_SetPinMux

 
 100 bytes in section .text
 
 100 bytes of CODE memory

Errors: none
Warnings: none
